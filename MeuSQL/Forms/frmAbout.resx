<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>